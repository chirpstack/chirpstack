// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: integration/integration.proto

package integration

import (
	common "github.com/chirpstack/chirpstack/api/go/v4/common"
	gw "github.com/chirpstack/chirpstack/api/go/v4/gw"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogLevel int32

const (
	// Info.
	LogLevel_INFO LogLevel = 0
	// Warning.
	LogLevel_WARNING LogLevel = 1
	// Error.
	LogLevel_ERROR LogLevel = 2
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "INFO",
		1: "WARNING",
		2: "ERROR",
	}
	LogLevel_value = map[string]int32{
		"INFO":    0,
		"WARNING": 1,
		"ERROR":   2,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_integration_integration_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_integration_integration_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_integration_integration_proto_rawDescGZIP(), []int{0}
}

type LogCode int32

const (
	// Unknown type.
	LogCode_UNKNOWN LogCode = 0
	// Error related to the downlink payload size.
	// Usually seen when the payload exceeded the maximum allowed payload size.
	LogCode_DOWNLINK_PAYLOAD_SIZE LogCode = 1
	// Uplink codec error.
	LogCode_UPLINK_CODEC LogCode = 2
	// Downlink codec error.
	LogCode_DOWNLINK_CODEC LogCode = 3
	// OTAA error.
	LogCode_OTAA LogCode = 4
	// Uplink frame-counter was reset.
	LogCode_UPLINK_F_CNT_RESET LogCode = 5
	// Uplink MIC error.
	LogCode_UPLINK_MIC LogCode = 6
	// Uplink frame-counter retransmission.
	LogCode_UPLINK_F_CNT_RETRANSMISSION LogCode = 7
	// Downlink gateway error.
	LogCode_DOWNLINK_GATEWAY LogCode = 8
	// Relay new end-device.
	LogCode_RELAY_NEW_END_DEVICE LogCode = 9
	// Downlink frame-counter.
	LogCode_F_CNT_DOWN LogCode = 10
	// Downlink has expired.
	LogCode_EXPIRED LogCode = 11
)

// Enum value maps for LogCode.
var (
	LogCode_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "DOWNLINK_PAYLOAD_SIZE",
		2:  "UPLINK_CODEC",
		3:  "DOWNLINK_CODEC",
		4:  "OTAA",
		5:  "UPLINK_F_CNT_RESET",
		6:  "UPLINK_MIC",
		7:  "UPLINK_F_CNT_RETRANSMISSION",
		8:  "DOWNLINK_GATEWAY",
		9:  "RELAY_NEW_END_DEVICE",
		10: "F_CNT_DOWN",
		11: "EXPIRED",
	}
	LogCode_value = map[string]int32{
		"UNKNOWN":                     0,
		"DOWNLINK_PAYLOAD_SIZE":       1,
		"UPLINK_CODEC":                2,
		"DOWNLINK_CODEC":              3,
		"OTAA":                        4,
		"UPLINK_F_CNT_RESET":          5,
		"UPLINK_MIC":                  6,
		"UPLINK_F_CNT_RETRANSMISSION": 7,
		"DOWNLINK_GATEWAY":            8,
		"RELAY_NEW_END_DEVICE":        9,
		"F_CNT_DOWN":                  10,
		"EXPIRED":                     11,
	}
)

func (x LogCode) Enum() *LogCode {
	p := new(LogCode)
	*p = x
	return p
}

func (x LogCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogCode) Descriptor() protoreflect.EnumDescriptor {
	return file_integration_integration_proto_enumTypes[1].Descriptor()
}

func (LogCode) Type() protoreflect.EnumType {
	return &file_integration_integration_proto_enumTypes[1]
}

func (x LogCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogCode.Descriptor instead.
func (LogCode) EnumDescriptor() ([]byte, []int) {
	return file_integration_integration_proto_rawDescGZIP(), []int{1}
}

// Device information.
type DeviceInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Tenant ID (UUID).
	TenantId string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Tenant name.
	TenantName string `protobuf:"bytes,2,opt,name=tenant_name,json=tenantName,proto3" json:"tenant_name,omitempty"`
	// Application ID (UUID).
	ApplicationId string `protobuf:"bytes,3,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	// Application name.
	ApplicationName string `protobuf:"bytes,4,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	// Device-profile ID (UUID).
	DeviceProfileId string `protobuf:"bytes,5,opt,name=device_profile_id,json=deviceProfileId,proto3" json:"device_profile_id,omitempty"`
	// Device-profile name.
	DeviceProfileName string `protobuf:"bytes,6,opt,name=device_profile_name,json=deviceProfileName,proto3" json:"device_profile_name,omitempty"`
	// Device name.
	DeviceName string `protobuf:"bytes,7,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	// Device EUI.
	DevEui string `protobuf:"bytes,8,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	// Device class.
	DeviceClassEnabled common.DeviceClass `protobuf:"varint,10,opt,name=device_class_enabled,json=deviceClassEnabled,proto3,enum=common.DeviceClass" json:"device_class_enabled,omitempty"`
	// Device-profile and device tags.
	Tags          map[string]string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	mi := &file_integration_integration_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_integration_integration_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_integration_integration_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceInfo) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *DeviceInfo) GetTenantName() string {
	if x != nil {
		return x.TenantName
	}
	return ""
}

func (x *DeviceInfo) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *DeviceInfo) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *DeviceInfo) GetDeviceProfileId() string {
	if x != nil {
		return x.DeviceProfileId
	}
	return ""
}

func (x *DeviceInfo) GetDeviceProfileName() string {
	if x != nil {
		return x.DeviceProfileName
	}
	return ""
}

func (x *DeviceInfo) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *DeviceInfo) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *DeviceInfo) GetDeviceClassEnabled() common.DeviceClass {
	if x != nil {
		return x.DeviceClassEnabled
	}
	return common.DeviceClass(0)
}

func (x *DeviceInfo) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// Uplink relay RX information.
type UplinkRelayRxInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Relay DevEUI.
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	// Frequency.
	Frequency uint32 `protobuf:"varint,2,opt,name=frequency,proto3" json:"frequency,omitempty"`
	// Data-rate.
	Dr uint32 `protobuf:"varint,3,opt,name=dr,proto3" json:"dr,omitempty"`
	// SNR.
	Snr int32 `protobuf:"varint,4,opt,name=snr,proto3" json:"snr,omitempty"`
	// RSSI.
	Rssi int32 `protobuf:"varint,5,opt,name=rssi,proto3" json:"rssi,omitempty"`
	// WOR channel.
	WorChannel    uint32 `protobuf:"varint,6,opt,name=wor_channel,json=worChannel,proto3" json:"wor_channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UplinkRelayRxInfo) Reset() {
	*x = UplinkRelayRxInfo{}
	mi := &file_integration_integration_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UplinkRelayRxInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UplinkRelayRxInfo) ProtoMessage() {}

func (x *UplinkRelayRxInfo) ProtoReflect() protoreflect.Message {
	mi := &file_integration_integration_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UplinkRelayRxInfo.ProtoReflect.Descriptor instead.
func (*UplinkRelayRxInfo) Descriptor() ([]byte, []int) {
	return file_integration_integration_proto_rawDescGZIP(), []int{1}
}

func (x *UplinkRelayRxInfo) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *UplinkRelayRxInfo) GetFrequency() uint32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *UplinkRelayRxInfo) GetDr() uint32 {
	if x != nil {
		return x.Dr
	}
	return 0
}

func (x *UplinkRelayRxInfo) GetSnr() int32 {
	if x != nil {
		return x.Snr
	}
	return 0
}

func (x *UplinkRelayRxInfo) GetRssi() int32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *UplinkRelayRxInfo) GetWorChannel() uint32 {
	if x != nil {
		return x.WorChannel
	}
	return 0
}

// UplinkEvent is the message sent when an uplink payload has been received.
type UplinkEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deduplication ID (UUID).
	DeduplicationId string `protobuf:"bytes,1,opt,name=deduplication_id,json=deduplicationId,proto3" json:"deduplication_id,omitempty"`
	// Timestamp.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// Device information.
	DeviceInfo *DeviceInfo `protobuf:"bytes,3,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	// Device address.
	DevAddr string `protobuf:"bytes,4,opt,name=dev_addr,json=devAddr,proto3" json:"dev_addr,omitempty"`
	// Device has ADR bit set.
	Adr bool `protobuf:"varint,5,opt,name=adr,proto3" json:"adr,omitempty"`
	// Data-rate.
	Dr uint32 `protobuf:"varint,6,opt,name=dr,proto3" json:"dr,omitempty"`
	// Frame counter.
	FCnt uint32 `protobuf:"varint,7,opt,name=f_cnt,json=fCnt,proto3" json:"f_cnt,omitempty"`
	// Frame port.
	FPort uint32 `protobuf:"varint,8,opt,name=f_port,json=fPort,proto3" json:"f_port,omitempty"`
	// Uplink was of type confirmed.
	Confirmed bool `protobuf:"varint,9,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	// FRMPayload data.
	Data []byte `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
	// Note that this is only set when a codec is configured in the Device
	// Profile.
	Object *structpb.Struct `protobuf:"bytes,11,opt,name=object,proto3" json:"object,omitempty"`
	// Receiving gateway RX info.
	RxInfo []*gw.UplinkRxInfo `protobuf:"bytes,12,rep,name=rx_info,json=rxInfo,proto3" json:"rx_info,omitempty"`
	// TX info.
	TxInfo *gw.UplinkTxInfo `protobuf:"bytes,13,opt,name=tx_info,json=txInfo,proto3" json:"tx_info,omitempty"`
	// Relay info.
	RelayRxInfo *UplinkRelayRxInfo `protobuf:"bytes,14,opt,name=relay_rx_info,json=relayRxInfo,proto3" json:"relay_rx_info,omitempty"`
	// Join-Server context.
	// A non-empty value indicatest that ChirpStack does not have access to
	// the AppSKey and that the encryption / decryption of the payloads is
	// the responsibility of the end-application.
	JoinServerContext *common.JoinServerContext `protobuf:"bytes,15,opt,name=join_server_context,json=joinServerContext,proto3" json:"join_server_context,omitempty"`
	// Region config ID.
	// This contains the region config ID which reported the uplink.
	RegionConfigId string `protobuf:"bytes,16,opt,name=region_config_id,json=regionConfigId,proto3" json:"region_config_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UplinkEvent) Reset() {
	*x = UplinkEvent{}
	mi := &file_integration_integration_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UplinkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UplinkEvent) ProtoMessage() {}

func (x *UplinkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_integration_integration_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UplinkEvent.ProtoReflect.Descriptor instead.
func (*UplinkEvent) Descriptor() ([]byte, []int) {
	return file_integration_integration_proto_rawDescGZIP(), []int{2}
}

func (x *UplinkEvent) GetDeduplicationId() string {
	if x != nil {
		return x.DeduplicationId
	}
	return ""
}

func (x *UplinkEvent) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *UplinkEvent) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *UplinkEvent) GetDevAddr() string {
	if x != nil {
		return x.DevAddr
	}
	return ""
}

func (x *UplinkEvent) GetAdr() bool {
	if x != nil {
		return x.Adr
	}
	return false
}

func (x *UplinkEvent) GetDr() uint32 {
	if x != nil {
		return x.Dr
	}
	return 0
}

func (x *UplinkEvent) GetFCnt() uint32 {
	if x != nil {
		return x.FCnt
	}
	return 0
}

func (x *UplinkEvent) GetFPort() uint32 {
	if x != nil {
		return x.FPort
	}
	return 0
}

func (x *UplinkEvent) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *UplinkEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UplinkEvent) GetObject() *structpb.Struct {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *UplinkEvent) GetRxInfo() []*gw.UplinkRxInfo {
	if x != nil {
		return x.RxInfo
	}
	return nil
}

func (x *UplinkEvent) GetTxInfo() *gw.UplinkTxInfo {
	if x != nil {
		return x.TxInfo
	}
	return nil
}

func (x *UplinkEvent) GetRelayRxInfo() *UplinkRelayRxInfo {
	if x != nil {
		return x.RelayRxInfo
	}
	return nil
}

func (x *UplinkEvent) GetJoinServerContext() *common.JoinServerContext {
	if x != nil {
		return x.JoinServerContext
	}
	return nil
}

func (x *UplinkEvent) GetRegionConfigId() string {
	if x != nil {
		return x.RegionConfigId
	}
	return ""
}

// JoinEvent is the message sent when a device joined the network.
// Note: this event is sent at the first uplink after OTAA.
type JoinEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deduplication ID (UUID).
	DeduplicationId string `protobuf:"bytes,1,opt,name=deduplication_id,json=deduplicationId,proto3" json:"deduplication_id,omitempty"`
	// Timestamp.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// Device info.
	DeviceInfo *DeviceInfo `protobuf:"bytes,3,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	// Device address.
	DevAddr string `protobuf:"bytes,4,opt,name=dev_addr,json=devAddr,proto3" json:"dev_addr,omitempty"`
	// Relay info.
	RelayRxInfo *UplinkRelayRxInfo `protobuf:"bytes,5,opt,name=relay_rx_info,json=relayRxInfo,proto3" json:"relay_rx_info,omitempty"`
	// Join-Server context.
	// A non-empty value indicatest that ChirpStack does not have access to
	// the AppSKey and that the encryption / decryption of the payloads is
	// the responsibility of the end-application.
	JoinServerContext *common.JoinServerContext `protobuf:"bytes,6,opt,name=join_server_context,json=joinServerContext,proto3" json:"join_server_context,omitempty"`
	// Region config ID.
	// This contains the region config ID which reported the uplink.
	RegionConfigId string `protobuf:"bytes,7,opt,name=region_config_id,json=regionConfigId,proto3" json:"region_config_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *JoinEvent) Reset() {
	*x = JoinEvent{}
	mi := &file_integration_integration_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinEvent) ProtoMessage() {}

func (x *JoinEvent) ProtoReflect() protoreflect.Message {
	mi := &file_integration_integration_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinEvent.ProtoReflect.Descriptor instead.
func (*JoinEvent) Descriptor() ([]byte, []int) {
	return file_integration_integration_proto_rawDescGZIP(), []int{3}
}

func (x *JoinEvent) GetDeduplicationId() string {
	if x != nil {
		return x.DeduplicationId
	}
	return ""
}

func (x *JoinEvent) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *JoinEvent) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *JoinEvent) GetDevAddr() string {
	if x != nil {
		return x.DevAddr
	}
	return ""
}

func (x *JoinEvent) GetRelayRxInfo() *UplinkRelayRxInfo {
	if x != nil {
		return x.RelayRxInfo
	}
	return nil
}

func (x *JoinEvent) GetJoinServerContext() *common.JoinServerContext {
	if x != nil {
		return x.JoinServerContext
	}
	return nil
}

func (x *JoinEvent) GetRegionConfigId() string {
	if x != nil {
		return x.RegionConfigId
	}
	return ""
}

// AckEvent is the message sent when a confirmation on a confirmed downlink
// has been received -or- when the downlink timed out.
type AckEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deduplication ID (UUID).
	DeduplicationId string `protobuf:"bytes,1,opt,name=deduplication_id,json=deduplicationId,proto3" json:"deduplication_id,omitempty"`
	// Timestamp.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// Device info.
	DeviceInfo *DeviceInfo `protobuf:"bytes,3,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	// Downlink queue item ID (UUID).
	QueueItemId string `protobuf:"bytes,4,opt,name=queue_item_id,json=queueItemId,proto3" json:"queue_item_id,omitempty"`
	// Frame was acknowledged.
	Acknowledged bool `protobuf:"varint,5,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	// Downlink frame counter to which the acknowledgement relates.
	FCntDown      uint32 `protobuf:"varint,6,opt,name=f_cnt_down,json=fCntDown,proto3" json:"f_cnt_down,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckEvent) Reset() {
	*x = AckEvent{}
	mi := &file_integration_integration_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckEvent) ProtoMessage() {}

func (x *AckEvent) ProtoReflect() protoreflect.Message {
	mi := &file_integration_integration_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckEvent.ProtoReflect.Descriptor instead.
func (*AckEvent) Descriptor() ([]byte, []int) {
	return file_integration_integration_proto_rawDescGZIP(), []int{4}
}

func (x *AckEvent) GetDeduplicationId() string {
	if x != nil {
		return x.DeduplicationId
	}
	return ""
}

func (x *AckEvent) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *AckEvent) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *AckEvent) GetQueueItemId() string {
	if x != nil {
		return x.QueueItemId
	}
	return ""
}

func (x *AckEvent) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

func (x *AckEvent) GetFCntDown() uint32 {
	if x != nil {
		return x.FCntDown
	}
	return 0
}

// TxAckEvent is the message sent when a downlink was acknowledged by the
// gateway for transmission. As a downlink can be scheduled in the future, this
// event does not confirm that the message has already been transmitted.
type TxAckEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Downlink ID.
	DownlinkId uint32 `protobuf:"varint,1,opt,name=downlink_id,json=downlinkId,proto3" json:"downlink_id,omitempty"`
	// Timestamp.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// Device info.
	DeviceInfo *DeviceInfo `protobuf:"bytes,3,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	// Downlink queue item ID (UUID).
	QueueItemId string `protobuf:"bytes,4,opt,name=queue_item_id,json=queueItemId,proto3" json:"queue_item_id,omitempty"`
	// Downlink frame-counter.
	FCntDown uint32 `protobuf:"varint,5,opt,name=f_cnt_down,json=fCntDown,proto3" json:"f_cnt_down,omitempty"`
	// Gateway ID.
	GatewayId string `protobuf:"bytes,6,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	// TX info.
	TxInfo        *gw.DownlinkTxInfo `protobuf:"bytes,7,opt,name=tx_info,json=txInfo,proto3" json:"tx_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxAckEvent) Reset() {
	*x = TxAckEvent{}
	mi := &file_integration_integration_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxAckEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxAckEvent) ProtoMessage() {}

func (x *TxAckEvent) ProtoReflect() protoreflect.Message {
	mi := &file_integration_integration_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxAckEvent.ProtoReflect.Descriptor instead.
func (*TxAckEvent) Descriptor() ([]byte, []int) {
	return file_integration_integration_proto_rawDescGZIP(), []int{5}
}

func (x *TxAckEvent) GetDownlinkId() uint32 {
	if x != nil {
		return x.DownlinkId
	}
	return 0
}

func (x *TxAckEvent) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *TxAckEvent) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *TxAckEvent) GetQueueItemId() string {
	if x != nil {
		return x.QueueItemId
	}
	return ""
}

func (x *TxAckEvent) GetFCntDown() uint32 {
	if x != nil {
		return x.FCntDown
	}
	return 0
}

func (x *TxAckEvent) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *TxAckEvent) GetTxInfo() *gw.DownlinkTxInfo {
	if x != nil {
		return x.TxInfo
	}
	return nil
}

// LogEvent is the message sent when a device-related log was sent.
type LogEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp.
	Time *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	// Device info.
	DeviceInfo *DeviceInfo `protobuf:"bytes,2,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	// Log level.
	Level LogLevel `protobuf:"varint,3,opt,name=level,proto3,enum=integration.LogLevel" json:"level,omitempty"`
	// Log code.
	Code LogCode `protobuf:"varint,4,opt,name=code,proto3,enum=integration.LogCode" json:"code,omitempty"`
	// Description message.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Context map.
	Context       map[string]string `protobuf:"bytes,6,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEvent) Reset() {
	*x = LogEvent{}
	mi := &file_integration_integration_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEvent) ProtoMessage() {}

func (x *LogEvent) ProtoReflect() protoreflect.Message {
	mi := &file_integration_integration_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEvent.ProtoReflect.Descriptor instead.
func (*LogEvent) Descriptor() ([]byte, []int) {
	return file_integration_integration_proto_rawDescGZIP(), []int{6}
}

func (x *LogEvent) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *LogEvent) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *LogEvent) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_INFO
}

func (x *LogEvent) GetCode() LogCode {
	if x != nil {
		return x.Code
	}
	return LogCode_UNKNOWN
}

func (x *LogEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LogEvent) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

// StatusEvent is the message sent when a device-status mac-command was sent
// by the device.
type StatusEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deduplication ID (UUID).
	DeduplicationId string `protobuf:"bytes,1,opt,name=deduplication_id,json=deduplicationId,proto3" json:"deduplication_id,omitempty"`
	// Timestamp.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// Device info.
	DeviceInfo *DeviceInfo `protobuf:"bytes,3,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	// The demodulation signal-to-noise ratio in dB for the last successfully
	// received device-status request by the Network Server.
	Margin int32 `protobuf:"varint,5,opt,name=margin,proto3" json:"margin,omitempty"`
	// Device is connected to an external power source.
	ExternalPowerSource bool `protobuf:"varint,6,opt,name=external_power_source,json=externalPowerSource,proto3" json:"external_power_source,omitempty"`
	// Battery level is not available.
	BatteryLevelUnavailable bool `protobuf:"varint,7,opt,name=battery_level_unavailable,json=batteryLevelUnavailable,proto3" json:"battery_level_unavailable,omitempty"`
	// Battery level.
	BatteryLevel  float32 `protobuf:"fixed32,8,opt,name=battery_level,json=batteryLevel,proto3" json:"battery_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusEvent) Reset() {
	*x = StatusEvent{}
	mi := &file_integration_integration_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusEvent) ProtoMessage() {}

func (x *StatusEvent) ProtoReflect() protoreflect.Message {
	mi := &file_integration_integration_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusEvent.ProtoReflect.Descriptor instead.
func (*StatusEvent) Descriptor() ([]byte, []int) {
	return file_integration_integration_proto_rawDescGZIP(), []int{7}
}

func (x *StatusEvent) GetDeduplicationId() string {
	if x != nil {
		return x.DeduplicationId
	}
	return ""
}

func (x *StatusEvent) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *StatusEvent) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *StatusEvent) GetMargin() int32 {
	if x != nil {
		return x.Margin
	}
	return 0
}

func (x *StatusEvent) GetExternalPowerSource() bool {
	if x != nil {
		return x.ExternalPowerSource
	}
	return false
}

func (x *StatusEvent) GetBatteryLevelUnavailable() bool {
	if x != nil {
		return x.BatteryLevelUnavailable
	}
	return false
}

func (x *StatusEvent) GetBatteryLevel() float32 {
	if x != nil {
		return x.BatteryLevel
	}
	return 0
}

// LocationEvent is the message sent when a geolocation resolve was returned.
type LocationEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deduplication ID (UUID).
	DeduplicationId string `protobuf:"bytes,1,opt,name=deduplication_id,json=deduplicationId,proto3" json:"deduplication_id,omitempty"`
	// Timestamp.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// Device info.
	DeviceInfo *DeviceInfo `protobuf:"bytes,3,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	// Location.
	Location      *common.Location `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationEvent) Reset() {
	*x = LocationEvent{}
	mi := &file_integration_integration_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationEvent) ProtoMessage() {}

func (x *LocationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_integration_integration_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationEvent.ProtoReflect.Descriptor instead.
func (*LocationEvent) Descriptor() ([]byte, []int) {
	return file_integration_integration_proto_rawDescGZIP(), []int{8}
}

func (x *LocationEvent) GetDeduplicationId() string {
	if x != nil {
		return x.DeduplicationId
	}
	return ""
}

func (x *LocationEvent) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *LocationEvent) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *LocationEvent) GetLocation() *common.Location {
	if x != nil {
		return x.Location
	}
	return nil
}

// IntegrationEvent is the message that can be sent by an integration.
// It allows for sending events which are provided by an external integration
// which are "not native" to ChirpStack.
type IntegrationEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deduplication ID (UUID).
	DeduplicationId string `protobuf:"bytes,1,opt,name=deduplication_id,json=deduplicationId,proto3" json:"deduplication_id,omitempty"`
	// Timestamp.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// Device info.
	DeviceInfo *DeviceInfo `protobuf:"bytes,3,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	// Integration name.
	IntegrationName string `protobuf:"bytes,4,opt,name=integration_name,json=integrationName,proto3" json:"integration_name,omitempty"`
	// Event type.
	EventType string `protobuf:"bytes,5,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	// Struct containing the event object.
	Object        *structpb.Struct `protobuf:"bytes,6,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntegrationEvent) Reset() {
	*x = IntegrationEvent{}
	mi := &file_integration_integration_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntegrationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationEvent) ProtoMessage() {}

func (x *IntegrationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_integration_integration_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationEvent.ProtoReflect.Descriptor instead.
func (*IntegrationEvent) Descriptor() ([]byte, []int) {
	return file_integration_integration_proto_rawDescGZIP(), []int{9}
}

func (x *IntegrationEvent) GetDeduplicationId() string {
	if x != nil {
		return x.DeduplicationId
	}
	return ""
}

func (x *IntegrationEvent) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *IntegrationEvent) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *IntegrationEvent) GetIntegrationName() string {
	if x != nil {
		return x.IntegrationName
	}
	return ""
}

func (x *IntegrationEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *IntegrationEvent) GetObject() *structpb.Struct {
	if x != nil {
		return x.Object
	}
	return nil
}

// DownlinkCommand is the command to enqueue a downlink payload for the given
// device.
type DownlinkCommand struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID (UUID).
	// If left blank, a random UUID will be generated.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Device EUI (EUI64).
	DevEui string `protobuf:"bytes,2,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	// Confirmed.
	Confirmed bool `protobuf:"varint,3,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	// FPort (must be > 0).
	FPort uint32 `protobuf:"varint,4,opt,name=f_port,json=fPort,proto3" json:"f_port,omitempty"`
	// Data.
	// Or use the json_object field when a codec has been configured.
	Data []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	// Only use this when a codec has been configured that can encode this
	// object to bytes.
	Object *structpb.Struct `protobuf:"bytes,6,opt,name=object,proto3" json:"object,omitempty"`
	// Expires at (optional).
	// Expired queue-items will be automatically removed from the queue.
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownlinkCommand) Reset() {
	*x = DownlinkCommand{}
	mi := &file_integration_integration_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownlinkCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownlinkCommand) ProtoMessage() {}

func (x *DownlinkCommand) ProtoReflect() protoreflect.Message {
	mi := &file_integration_integration_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownlinkCommand.ProtoReflect.Descriptor instead.
func (*DownlinkCommand) Descriptor() ([]byte, []int) {
	return file_integration_integration_proto_rawDescGZIP(), []int{10}
}

func (x *DownlinkCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DownlinkCommand) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *DownlinkCommand) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *DownlinkCommand) GetFPort() uint32 {
	if x != nil {
		return x.FPort
	}
	return 0
}

func (x *DownlinkCommand) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DownlinkCommand) GetObject() *structpb.Struct {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *DownlinkCommand) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

var File_integration_integration_proto protoreflect.FileDescriptor

const file_integration_integration_proto_rawDesc = "" +
	"\n" +
	"\x1dintegration/integration.proto\x12\vintegration\x1a\x13common/common.proto\x1a\vgw/gw.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xe9\x03\n" +
	"\n" +
	"DeviceInfo\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vtenant_name\x18\x02 \x01(\tR\n" +
	"tenantName\x12%\n" +
	"\x0eapplication_id\x18\x03 \x01(\tR\rapplicationId\x12)\n" +
	"\x10application_name\x18\x04 \x01(\tR\x0fapplicationName\x12*\n" +
	"\x11device_profile_id\x18\x05 \x01(\tR\x0fdeviceProfileId\x12.\n" +
	"\x13device_profile_name\x18\x06 \x01(\tR\x11deviceProfileName\x12\x1f\n" +
	"\vdevice_name\x18\a \x01(\tR\n" +
	"deviceName\x12\x17\n" +
	"\adev_eui\x18\b \x01(\tR\x06devEui\x12E\n" +
	"\x14device_class_enabled\x18\n" +
	" \x01(\x0e2\x13.common.DeviceClassR\x12deviceClassEnabled\x125\n" +
	"\x04tags\x18\t \x03(\v2!.integration.DeviceInfo.TagsEntryR\x04tags\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa1\x01\n" +
	"\x11UplinkRelayRxInfo\x12\x17\n" +
	"\adev_eui\x18\x01 \x01(\tR\x06devEui\x12\x1c\n" +
	"\tfrequency\x18\x02 \x01(\rR\tfrequency\x12\x0e\n" +
	"\x02dr\x18\x03 \x01(\rR\x02dr\x12\x10\n" +
	"\x03snr\x18\x04 \x01(\x05R\x03snr\x12\x12\n" +
	"\x04rssi\x18\x05 \x01(\x05R\x04rssi\x12\x1f\n" +
	"\vwor_channel\x18\x06 \x01(\rR\n" +
	"worChannel\"\xfd\x04\n" +
	"\vUplinkEvent\x12)\n" +
	"\x10deduplication_id\x18\x01 \x01(\tR\x0fdeduplicationId\x12.\n" +
	"\x04time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x128\n" +
	"\vdevice_info\x18\x03 \x01(\v2\x17.integration.DeviceInfoR\n" +
	"deviceInfo\x12\x19\n" +
	"\bdev_addr\x18\x04 \x01(\tR\adevAddr\x12\x10\n" +
	"\x03adr\x18\x05 \x01(\bR\x03adr\x12\x0e\n" +
	"\x02dr\x18\x06 \x01(\rR\x02dr\x12\x13\n" +
	"\x05f_cnt\x18\a \x01(\rR\x04fCnt\x12\x15\n" +
	"\x06f_port\x18\b \x01(\rR\x05fPort\x12\x1c\n" +
	"\tconfirmed\x18\t \x01(\bR\tconfirmed\x12\x12\n" +
	"\x04data\x18\n" +
	" \x01(\fR\x04data\x12/\n" +
	"\x06object\x18\v \x01(\v2\x17.google.protobuf.StructR\x06object\x12)\n" +
	"\arx_info\x18\f \x03(\v2\x10.gw.UplinkRxInfoR\x06rxInfo\x12)\n" +
	"\atx_info\x18\r \x01(\v2\x10.gw.UplinkTxInfoR\x06txInfo\x12B\n" +
	"\rrelay_rx_info\x18\x0e \x01(\v2\x1e.integration.UplinkRelayRxInfoR\vrelayRxInfo\x12I\n" +
	"\x13join_server_context\x18\x0f \x01(\v2\x19.common.JoinServerContextR\x11joinServerContext\x12(\n" +
	"\x10region_config_id\x18\x10 \x01(\tR\x0eregionConfigId\"\xf4\x02\n" +
	"\tJoinEvent\x12)\n" +
	"\x10deduplication_id\x18\x01 \x01(\tR\x0fdeduplicationId\x12.\n" +
	"\x04time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x128\n" +
	"\vdevice_info\x18\x03 \x01(\v2\x17.integration.DeviceInfoR\n" +
	"deviceInfo\x12\x19\n" +
	"\bdev_addr\x18\x04 \x01(\tR\adevAddr\x12B\n" +
	"\rrelay_rx_info\x18\x05 \x01(\v2\x1e.integration.UplinkRelayRxInfoR\vrelayRxInfo\x12I\n" +
	"\x13join_server_context\x18\x06 \x01(\v2\x19.common.JoinServerContextR\x11joinServerContext\x12(\n" +
	"\x10region_config_id\x18\a \x01(\tR\x0eregionConfigId\"\x85\x02\n" +
	"\bAckEvent\x12)\n" +
	"\x10deduplication_id\x18\x01 \x01(\tR\x0fdeduplicationId\x12.\n" +
	"\x04time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x128\n" +
	"\vdevice_info\x18\x03 \x01(\v2\x17.integration.DeviceInfoR\n" +
	"deviceInfo\x12\"\n" +
	"\rqueue_item_id\x18\x04 \x01(\tR\vqueueItemId\x12\"\n" +
	"\facknowledged\x18\x05 \x01(\bR\facknowledged\x12\x1c\n" +
	"\n" +
	"f_cnt_down\x18\x06 \x01(\rR\bfCntDown\"\xa5\x02\n" +
	"\n" +
	"TxAckEvent\x12\x1f\n" +
	"\vdownlink_id\x18\x01 \x01(\rR\n" +
	"downlinkId\x12.\n" +
	"\x04time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x128\n" +
	"\vdevice_info\x18\x03 \x01(\v2\x17.integration.DeviceInfoR\n" +
	"deviceInfo\x12\"\n" +
	"\rqueue_item_id\x18\x04 \x01(\tR\vqueueItemId\x12\x1c\n" +
	"\n" +
	"f_cnt_down\x18\x05 \x01(\rR\bfCntDown\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x06 \x01(\tR\tgatewayId\x12+\n" +
	"\atx_info\x18\a \x01(\v2\x12.gw.DownlinkTxInfoR\x06txInfo\"\xe7\x02\n" +
	"\bLogEvent\x12.\n" +
	"\x04time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x128\n" +
	"\vdevice_info\x18\x02 \x01(\v2\x17.integration.DeviceInfoR\n" +
	"deviceInfo\x12+\n" +
	"\x05level\x18\x03 \x01(\x0e2\x15.integration.LogLevelR\x05level\x12(\n" +
	"\x04code\x18\x04 \x01(\x0e2\x14.integration.LogCodeR\x04code\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12<\n" +
	"\acontext\x18\x06 \x03(\v2\".integration.LogEvent.ContextEntryR\acontext\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcf\x02\n" +
	"\vStatusEvent\x12)\n" +
	"\x10deduplication_id\x18\x01 \x01(\tR\x0fdeduplicationId\x12.\n" +
	"\x04time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x128\n" +
	"\vdevice_info\x18\x03 \x01(\v2\x17.integration.DeviceInfoR\n" +
	"deviceInfo\x12\x16\n" +
	"\x06margin\x18\x05 \x01(\x05R\x06margin\x122\n" +
	"\x15external_power_source\x18\x06 \x01(\bR\x13externalPowerSource\x12:\n" +
	"\x19battery_level_unavailable\x18\a \x01(\bR\x17batteryLevelUnavailable\x12#\n" +
	"\rbattery_level\x18\b \x01(\x02R\fbatteryLevel\"\xd2\x01\n" +
	"\rLocationEvent\x12)\n" +
	"\x10deduplication_id\x18\x01 \x01(\tR\x0fdeduplicationId\x12.\n" +
	"\x04time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x128\n" +
	"\vdevice_info\x18\x03 \x01(\v2\x17.integration.DeviceInfoR\n" +
	"deviceInfo\x12,\n" +
	"\blocation\x18\x04 \x01(\v2\x10.common.LocationR\blocation\"\xa2\x02\n" +
	"\x10IntegrationEvent\x12)\n" +
	"\x10deduplication_id\x18\x01 \x01(\tR\x0fdeduplicationId\x12.\n" +
	"\x04time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x128\n" +
	"\vdevice_info\x18\x03 \x01(\v2\x17.integration.DeviceInfoR\n" +
	"deviceInfo\x12)\n" +
	"\x10integration_name\x18\x04 \x01(\tR\x0fintegrationName\x12\x1d\n" +
	"\n" +
	"event_type\x18\x05 \x01(\tR\teventType\x12/\n" +
	"\x06object\x18\x06 \x01(\v2\x17.google.protobuf.StructR\x06object\"\xef\x01\n" +
	"\x0fDownlinkCommand\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\adev_eui\x18\x02 \x01(\tR\x06devEui\x12\x1c\n" +
	"\tconfirmed\x18\x03 \x01(\bR\tconfirmed\x12\x15\n" +
	"\x06f_port\x18\x04 \x01(\rR\x05fPort\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\x12/\n" +
	"\x06object\x18\x06 \x01(\v2\x17.google.protobuf.StructR\x06object\x129\n" +
	"\n" +
	"expires_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt*,\n" +
	"\bLogLevel\x12\b\n" +
	"\x04INFO\x10\x00\x12\v\n" +
	"\aWARNING\x10\x01\x12\t\n" +
	"\x05ERROR\x10\x02*\xf7\x01\n" +
	"\aLogCode\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x19\n" +
	"\x15DOWNLINK_PAYLOAD_SIZE\x10\x01\x12\x10\n" +
	"\fUPLINK_CODEC\x10\x02\x12\x12\n" +
	"\x0eDOWNLINK_CODEC\x10\x03\x12\b\n" +
	"\x04OTAA\x10\x04\x12\x16\n" +
	"\x12UPLINK_F_CNT_RESET\x10\x05\x12\x0e\n" +
	"\n" +
	"UPLINK_MIC\x10\x06\x12\x1f\n" +
	"\x1bUPLINK_F_CNT_RETRANSMISSION\x10\a\x12\x14\n" +
	"\x10DOWNLINK_GATEWAY\x10\b\x12\x18\n" +
	"\x14RELAY_NEW_END_DEVICE\x10\t\x12\x0e\n" +
	"\n" +
	"F_CNT_DOWN\x10\n" +
	"\x12\v\n" +
	"\aEXPIRED\x10\vB\xbf\x01\n" +
	"\x1dio.chirpstack.api.integrationB\x10IntegrationProtoP\x01Z3github.com/brocaar/chirpstack/api/go/v4/integration\xaa\x02\x16Chirpstack.Integration\xca\x02\x16Chirpstack\\Integration\xe2\x02\"GPBMetadata\\Chirpstack\\Integrationb\x06proto3"

var (
	file_integration_integration_proto_rawDescOnce sync.Once
	file_integration_integration_proto_rawDescData []byte
)

func file_integration_integration_proto_rawDescGZIP() []byte {
	file_integration_integration_proto_rawDescOnce.Do(func() {
		file_integration_integration_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_integration_integration_proto_rawDesc), len(file_integration_integration_proto_rawDesc)))
	})
	return file_integration_integration_proto_rawDescData
}

var file_integration_integration_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_integration_integration_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_integration_integration_proto_goTypes = []any{
	(LogLevel)(0),                    // 0: integration.LogLevel
	(LogCode)(0),                     // 1: integration.LogCode
	(*DeviceInfo)(nil),               // 2: integration.DeviceInfo
	(*UplinkRelayRxInfo)(nil),        // 3: integration.UplinkRelayRxInfo
	(*UplinkEvent)(nil),              // 4: integration.UplinkEvent
	(*JoinEvent)(nil),                // 5: integration.JoinEvent
	(*AckEvent)(nil),                 // 6: integration.AckEvent
	(*TxAckEvent)(nil),               // 7: integration.TxAckEvent
	(*LogEvent)(nil),                 // 8: integration.LogEvent
	(*StatusEvent)(nil),              // 9: integration.StatusEvent
	(*LocationEvent)(nil),            // 10: integration.LocationEvent
	(*IntegrationEvent)(nil),         // 11: integration.IntegrationEvent
	(*DownlinkCommand)(nil),          // 12: integration.DownlinkCommand
	nil,                              // 13: integration.DeviceInfo.TagsEntry
	nil,                              // 14: integration.LogEvent.ContextEntry
	(common.DeviceClass)(0),          // 15: common.DeviceClass
	(*timestamppb.Timestamp)(nil),    // 16: google.protobuf.Timestamp
	(*structpb.Struct)(nil),          // 17: google.protobuf.Struct
	(*gw.UplinkRxInfo)(nil),          // 18: gw.UplinkRxInfo
	(*gw.UplinkTxInfo)(nil),          // 19: gw.UplinkTxInfo
	(*common.JoinServerContext)(nil), // 20: common.JoinServerContext
	(*gw.DownlinkTxInfo)(nil),        // 21: gw.DownlinkTxInfo
	(*common.Location)(nil),          // 22: common.Location
}
var file_integration_integration_proto_depIdxs = []int32{
	15, // 0: integration.DeviceInfo.device_class_enabled:type_name -> common.DeviceClass
	13, // 1: integration.DeviceInfo.tags:type_name -> integration.DeviceInfo.TagsEntry
	16, // 2: integration.UplinkEvent.time:type_name -> google.protobuf.Timestamp
	2,  // 3: integration.UplinkEvent.device_info:type_name -> integration.DeviceInfo
	17, // 4: integration.UplinkEvent.object:type_name -> google.protobuf.Struct
	18, // 5: integration.UplinkEvent.rx_info:type_name -> gw.UplinkRxInfo
	19, // 6: integration.UplinkEvent.tx_info:type_name -> gw.UplinkTxInfo
	3,  // 7: integration.UplinkEvent.relay_rx_info:type_name -> integration.UplinkRelayRxInfo
	20, // 8: integration.UplinkEvent.join_server_context:type_name -> common.JoinServerContext
	16, // 9: integration.JoinEvent.time:type_name -> google.protobuf.Timestamp
	2,  // 10: integration.JoinEvent.device_info:type_name -> integration.DeviceInfo
	3,  // 11: integration.JoinEvent.relay_rx_info:type_name -> integration.UplinkRelayRxInfo
	20, // 12: integration.JoinEvent.join_server_context:type_name -> common.JoinServerContext
	16, // 13: integration.AckEvent.time:type_name -> google.protobuf.Timestamp
	2,  // 14: integration.AckEvent.device_info:type_name -> integration.DeviceInfo
	16, // 15: integration.TxAckEvent.time:type_name -> google.protobuf.Timestamp
	2,  // 16: integration.TxAckEvent.device_info:type_name -> integration.DeviceInfo
	21, // 17: integration.TxAckEvent.tx_info:type_name -> gw.DownlinkTxInfo
	16, // 18: integration.LogEvent.time:type_name -> google.protobuf.Timestamp
	2,  // 19: integration.LogEvent.device_info:type_name -> integration.DeviceInfo
	0,  // 20: integration.LogEvent.level:type_name -> integration.LogLevel
	1,  // 21: integration.LogEvent.code:type_name -> integration.LogCode
	14, // 22: integration.LogEvent.context:type_name -> integration.LogEvent.ContextEntry
	16, // 23: integration.StatusEvent.time:type_name -> google.protobuf.Timestamp
	2,  // 24: integration.StatusEvent.device_info:type_name -> integration.DeviceInfo
	16, // 25: integration.LocationEvent.time:type_name -> google.protobuf.Timestamp
	2,  // 26: integration.LocationEvent.device_info:type_name -> integration.DeviceInfo
	22, // 27: integration.LocationEvent.location:type_name -> common.Location
	16, // 28: integration.IntegrationEvent.time:type_name -> google.protobuf.Timestamp
	2,  // 29: integration.IntegrationEvent.device_info:type_name -> integration.DeviceInfo
	17, // 30: integration.IntegrationEvent.object:type_name -> google.protobuf.Struct
	17, // 31: integration.DownlinkCommand.object:type_name -> google.protobuf.Struct
	16, // 32: integration.DownlinkCommand.expires_at:type_name -> google.protobuf.Timestamp
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_integration_integration_proto_init() }
func file_integration_integration_proto_init() {
	if File_integration_integration_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_integration_integration_proto_rawDesc), len(file_integration_integration_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_integration_integration_proto_goTypes,
		DependencyIndexes: file_integration_integration_proto_depIdxs,
		EnumInfos:         file_integration_integration_proto_enumTypes,
		MessageInfos:      file_integration_integration_proto_msgTypes,
	}.Build()
	File_integration_integration_proto = out.File
	file_integration_integration_proto_goTypes = nil
	file_integration_integration_proto_depIdxs = nil
}
