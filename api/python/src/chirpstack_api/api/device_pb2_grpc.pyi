"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import google.protobuf.empty_pb2
import grpc

from .device_pb2 import *
# DeviceService is the service providing API methods for managing devices.
class DeviceServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    # Create the given device.
    Create:grpc.UnaryUnaryMultiCallable[
        global___CreateDeviceRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # Get returns the device for the given DevEUI.
    Get:grpc.UnaryUnaryMultiCallable[
        global___GetDeviceRequest,
        global___GetDeviceResponse] = ...

    # Update the given device.
    Update:grpc.UnaryUnaryMultiCallable[
        global___UpdateDeviceRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # Delete the device with the given DevEUI.
    Delete:grpc.UnaryUnaryMultiCallable[
        global___DeleteDeviceRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # Get the list of devices.
    List:grpc.UnaryUnaryMultiCallable[
        global___ListDevicesRequest,
        global___ListDevicesResponse] = ...

    # Create the given device-keys.
    CreateKeys:grpc.UnaryUnaryMultiCallable[
        global___CreateDeviceKeysRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # Get the device-keys for the given DevEUI.
    GetKeys:grpc.UnaryUnaryMultiCallable[
        global___GetDeviceKeysRequest,
        global___GetDeviceKeysResponse] = ...

    # Update the given device-keys.
    UpdateKeys:grpc.UnaryUnaryMultiCallable[
        global___UpdateDeviceKeysRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # Delete the device-keys for the given DevEUI.
    DeleteKeys:grpc.UnaryUnaryMultiCallable[
        global___DeleteDeviceKeysRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # FlushDevNonces flushes the OTAA device nonces.
    FlushDevNonces:grpc.UnaryUnaryMultiCallable[
        global___FlushDevNoncesRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # Activate (re)activates the device with the given parameters (for ABP or for importing OTAA activations).
    Activate:grpc.UnaryUnaryMultiCallable[
        global___ActivateDeviceRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # Deactivate de-activates the device.
    Deactivate:grpc.UnaryUnaryMultiCallable[
        global___DeactivateDeviceRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # GetActivation returns the current activation details of the device (OTAA or ABP).
    GetActivation:grpc.UnaryUnaryMultiCallable[
        global___GetDeviceActivationRequest,
        global___GetDeviceActivationResponse] = ...

    # GetRandomDevAddr returns a random DevAddr taking the NwkID prefix into account.
    GetRandomDevAddr:grpc.UnaryUnaryMultiCallable[
        global___GetRandomDevAddrRequest,
        global___GetRandomDevAddrResponse] = ...

    # GetMetrics returns the device metrics.
    # Note that this requires a device-profile with codec and measurements configured.
    GetMetrics:grpc.UnaryUnaryMultiCallable[
        global___GetDeviceMetricsRequest,
        global___GetDeviceMetricsResponse] = ...

    # GetLinkMetrics returns the device link metrics.
    # This includes uplinks, downlinks, RSSI, SNR, etc...
    GetLinkMetrics:grpc.UnaryUnaryMultiCallable[
        global___GetDeviceLinkMetricsRequest,
        global___GetDeviceLinkMetricsResponse] = ...

    # Enqueue adds the given item to the downlink queue.
    Enqueue:grpc.UnaryUnaryMultiCallable[
        global___EnqueueDeviceQueueItemRequest,
        global___EnqueueDeviceQueueItemResponse] = ...

    # FlushQueue flushes the downlink device-queue.
    FlushQueue:grpc.UnaryUnaryMultiCallable[
        global___FlushDeviceQueueRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # GetQueue returns the downlink device-queue.
    GetQueue:grpc.UnaryUnaryMultiCallable[
        global___GetDeviceQueueItemsRequest,
        global___GetDeviceQueueItemsResponse] = ...


# DeviceService is the service providing API methods for managing devices.
class DeviceServiceServicer(metaclass=abc.ABCMeta):
    # Create the given device.
    @abc.abstractmethod
    def Create(self,
        request: global___CreateDeviceRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # Get returns the device for the given DevEUI.
    @abc.abstractmethod
    def Get(self,
        request: global___GetDeviceRequest,
        context: grpc.ServicerContext,
    ) -> global___GetDeviceResponse: ...

    # Update the given device.
    @abc.abstractmethod
    def Update(self,
        request: global___UpdateDeviceRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # Delete the device with the given DevEUI.
    @abc.abstractmethod
    def Delete(self,
        request: global___DeleteDeviceRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # Get the list of devices.
    @abc.abstractmethod
    def List(self,
        request: global___ListDevicesRequest,
        context: grpc.ServicerContext,
    ) -> global___ListDevicesResponse: ...

    # Create the given device-keys.
    @abc.abstractmethod
    def CreateKeys(self,
        request: global___CreateDeviceKeysRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # Get the device-keys for the given DevEUI.
    @abc.abstractmethod
    def GetKeys(self,
        request: global___GetDeviceKeysRequest,
        context: grpc.ServicerContext,
    ) -> global___GetDeviceKeysResponse: ...

    # Update the given device-keys.
    @abc.abstractmethod
    def UpdateKeys(self,
        request: global___UpdateDeviceKeysRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # Delete the device-keys for the given DevEUI.
    @abc.abstractmethod
    def DeleteKeys(self,
        request: global___DeleteDeviceKeysRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # FlushDevNonces flushes the OTAA device nonces.
    @abc.abstractmethod
    def FlushDevNonces(self,
        request: global___FlushDevNoncesRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # Activate (re)activates the device with the given parameters (for ABP or for importing OTAA activations).
    @abc.abstractmethod
    def Activate(self,
        request: global___ActivateDeviceRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # Deactivate de-activates the device.
    @abc.abstractmethod
    def Deactivate(self,
        request: global___DeactivateDeviceRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # GetActivation returns the current activation details of the device (OTAA or ABP).
    @abc.abstractmethod
    def GetActivation(self,
        request: global___GetDeviceActivationRequest,
        context: grpc.ServicerContext,
    ) -> global___GetDeviceActivationResponse: ...

    # GetRandomDevAddr returns a random DevAddr taking the NwkID prefix into account.
    @abc.abstractmethod
    def GetRandomDevAddr(self,
        request: global___GetRandomDevAddrRequest,
        context: grpc.ServicerContext,
    ) -> global___GetRandomDevAddrResponse: ...

    # GetMetrics returns the device metrics.
    # Note that this requires a device-profile with codec and measurements configured.
    @abc.abstractmethod
    def GetMetrics(self,
        request: global___GetDeviceMetricsRequest,
        context: grpc.ServicerContext,
    ) -> global___GetDeviceMetricsResponse: ...

    # GetLinkMetrics returns the device link metrics.
    # This includes uplinks, downlinks, RSSI, SNR, etc...
    @abc.abstractmethod
    def GetLinkMetrics(self,
        request: global___GetDeviceLinkMetricsRequest,
        context: grpc.ServicerContext,
    ) -> global___GetDeviceLinkMetricsResponse: ...

    # Enqueue adds the given item to the downlink queue.
    @abc.abstractmethod
    def Enqueue(self,
        request: global___EnqueueDeviceQueueItemRequest,
        context: grpc.ServicerContext,
    ) -> global___EnqueueDeviceQueueItemResponse: ...

    # FlushQueue flushes the downlink device-queue.
    @abc.abstractmethod
    def FlushQueue(self,
        request: global___FlushDeviceQueueRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # GetQueue returns the downlink device-queue.
    @abc.abstractmethod
    def GetQueue(self,
        request: global___GetDeviceQueueItemsRequest,
        context: grpc.ServicerContext,
    ) -> global___GetDeviceQueueItemsResponse: ...


def add_DeviceServiceServicer_to_server(servicer: DeviceServiceServicer, server: grpc.Server) -> None: ...
