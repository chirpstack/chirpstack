"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import google.protobuf.empty_pb2
import grpc

from .multicast_group_pb2 import *
# MulticastGroupService is the service managing multicast-groups.
class MulticastGroupServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    # Create the given multicast group.
    Create:grpc.UnaryUnaryMultiCallable[
        global___CreateMulticastGroupRequest,
        global___CreateMulticastGroupResponse] = ...

    # Get returns the multicast group for the given ID.
    Get:grpc.UnaryUnaryMultiCallable[
        global___GetMulticastGroupRequest,
        global___GetMulticastGroupResponse] = ...

    # Update the given multicast group.
    Update:grpc.UnaryUnaryMultiCallable[
        global___UpdateMulticastGroupRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # Delete the multicast-group with the given ID.
    Delete:grpc.UnaryUnaryMultiCallable[
        global___DeleteMulticastGroupRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # List the available multicast groups.
    List:grpc.UnaryUnaryMultiCallable[
        global___ListMulticastGroupsRequest,
        global___ListMulticastGroupsResponse] = ...

    # Add a device to the multicast group.
    AddDevice:grpc.UnaryUnaryMultiCallable[
        global___AddDeviceToMulticastGroupRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # Remove a device from the multicast group.
    RemoveDevice:grpc.UnaryUnaryMultiCallable[
        global___RemoveDeviceFromMulticastGroupRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # Add the given item to the multcast group queue.
    Enqueue:grpc.UnaryUnaryMultiCallable[
        global___EnqueueMulticastGroupQueueItemRequest,
        global___EnqueueMulticastGroupQueueItemResponse] = ...

    # Flush the queue for the given multicast group.
    FlushQueue:grpc.UnaryUnaryMultiCallable[
        global___FlushMulticastGroupQueueRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # List the items in the multicast group queue.
    ListQueue:grpc.UnaryUnaryMultiCallable[
        global___ListMulticastGroupQueueRequest,
        global___ListMulticastGroupQueueResponse] = ...


# MulticastGroupService is the service managing multicast-groups.
class MulticastGroupServiceServicer(metaclass=abc.ABCMeta):
    # Create the given multicast group.
    @abc.abstractmethod
    def Create(self,
        request: global___CreateMulticastGroupRequest,
        context: grpc.ServicerContext,
    ) -> global___CreateMulticastGroupResponse: ...

    # Get returns the multicast group for the given ID.
    @abc.abstractmethod
    def Get(self,
        request: global___GetMulticastGroupRequest,
        context: grpc.ServicerContext,
    ) -> global___GetMulticastGroupResponse: ...

    # Update the given multicast group.
    @abc.abstractmethod
    def Update(self,
        request: global___UpdateMulticastGroupRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # Delete the multicast-group with the given ID.
    @abc.abstractmethod
    def Delete(self,
        request: global___DeleteMulticastGroupRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # List the available multicast groups.
    @abc.abstractmethod
    def List(self,
        request: global___ListMulticastGroupsRequest,
        context: grpc.ServicerContext,
    ) -> global___ListMulticastGroupsResponse: ...

    # Add a device to the multicast group.
    @abc.abstractmethod
    def AddDevice(self,
        request: global___AddDeviceToMulticastGroupRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # Remove a device from the multicast group.
    @abc.abstractmethod
    def RemoveDevice(self,
        request: global___RemoveDeviceFromMulticastGroupRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # Add the given item to the multcast group queue.
    @abc.abstractmethod
    def Enqueue(self,
        request: global___EnqueueMulticastGroupQueueItemRequest,
        context: grpc.ServicerContext,
    ) -> global___EnqueueMulticastGroupQueueItemResponse: ...

    # Flush the queue for the given multicast group.
    @abc.abstractmethod
    def FlushQueue(self,
        request: global___FlushMulticastGroupQueueRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # List the items in the multicast group queue.
    @abc.abstractmethod
    def ListQueue(self,
        request: global___ListMulticastGroupQueueRequest,
        context: grpc.ServicerContext,
    ) -> global___ListMulticastGroupQueueResponse: ...


def add_MulticastGroupServiceServicer_to_server(servicer: MulticastGroupServiceServicer, server: grpc.Server) -> None: ...
